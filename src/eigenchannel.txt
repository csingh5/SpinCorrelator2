///////////////////////////////////////////////////////////////////////////////
//                                                                           //
//                          *** main.cpp ***                                 //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////


#include <iostream>
#include "Eigmesh.hpp"
#include "Mesh.hpp"
#include "W90.hpp"
#include "StaticMatrix.hpp"

int main(int argc, char *argv[])
{
	
	StaticMatrix X0("data/input/SmB6.klist");
	Mesh qmesh("data/input/SmB6.klist");
	Eigen::Vector3d q;

	std::ofstream file("data/output/eigenchannel.dat");

	for (int i = 0; i < qmesh.size(); ++i) {
		
		q = qmesh.point(i);

		if (q(0) == 0 && q(1) == 0 && q(2) == 0) continue;
		saes_t s;
		s.compute(X0(q));
		
		file << std::scientific << q(0) << "\t" << q(1) << "\t" << q(2) << "\t" 
			 << s.eigenvalues().maxCoeff() << "\n";

		std::cout << 100.0 * i / qmesh.size() << "%" << std::endl;

	}
	


	return 0;
}
